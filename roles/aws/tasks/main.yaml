- name: Find current instance id
  ansible.builtin.shell:
    cmd: "wget -q -O - http://169.254.169.254/latest/meta-data/instance-id"
  register: instance_id
  tags:
    - aws

- name: Create a target group (with this host)
  community.aws.elb_target_group:
    name: "{{ aws_target_group_name }}"
    state: present
    region: "{{ aws_region }}"
    #preserve_client_ip_enabled: no
    protocol: tls
    port: 443
    vpc_id: "{{ aws_vpc_id }}"

    health_check_protocol: tcp
    health_check_path: /
    successful_response_codes: "200,250-260,303"
    targets:
      - Id: "{{ instance_id.stdout }}"
        Port: 443
  tags:
    - aws

- name: Create a target group (with this host)
  community.aws.elb_target_group:
    name: "{{ aws_target_group_name }}-proxy"
    state: present
    region: "{{ aws_region }}"
    #preserve_client_ip_enabled: no
    protocol: tcp
    port: 5432
    vpc_id: "{{ aws_vpc_id }}"

    health_check_protocol: tcp
    health_check_path: /
    successful_response_codes: "200,250-260,303"
    targets:
      - Id: "{{ instance_id.stdout }}"
        Port: 5432
  tags:
    - aws

- name: Create an ELB and attach a listener
  community.aws.elb_network_lb:
    name: "{{ aws_network_lb_name }}"
    state: present
    scheme: internal
    region: "{{ aws_region }}"
    subnets: "{{ aws_network_lb_subnets }}"
    listeners:
      - Protocol: TLS
        Port: 443
        Certificates:
          - CertificateArn: "{{ aws_certificate_arn }}"
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ aws_target_group_name }}"
      - Protocol: TCP
        Port: 5432
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ aws_target_group_name }}-proxy"
  register: elb
  tags:
    - aws

#- name: List all hosted zones
#  community.aws.route53_info:
#    query: hosted_zone
#  register: hosted_zones
#  tags:
#    - aws
#
#- debug:
#    var: hosted_zones
#  tags:
#    - aws

- name: Create route53 entries
  community.aws.route53:
    state: present
    hosted_zone_id: "{{ aws_r53_hosted_zone_id }}"
    record: "{{ item }}"
    type: A
    alias: yes
    alias_hosted_zone_id: "{{ elb.canonical_hosted_zone_id }}"
    value: "{{ elb.dns_name }}"
    overwrite: yes
    wait: no
  loop:
    - "{{ immuta_url }}"
    - "{{ trino_url }}"
  tags:
    - aws
